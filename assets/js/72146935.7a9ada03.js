"use strict";(self.webpackChunkmy_portfolio=self.webpackChunkmy_portfolio||[]).push([[488],{66:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>t,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"Security/Wazuh_Lab+Terraform+AWS","title":"\ud83d\udee0\ufe0f Cloud-Based Wazuh Monitoring Using Terraform and AWS","description":"This project was created to launch a Wazuh lab using the AWS sandbox.","source":"@site/docs/Security/Wazuh_Lab+Terraform+AWS.md","sourceDirName":"Security","slug":"/Security/Wazuh_Lab+Terraform+AWS","permalink":"/docs/Security/Wazuh_Lab+Terraform+AWS","draft":false,"unlisted":false,"editUrl":"https://github.com/denisCabrera/portfolio-site/docs/Security/Wazuh_Lab+Terraform+AWS.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Security","permalink":"/docs/category/security"},"next":{"title":"\u2601\ufe0f Cloud Security Essentials: Real-World Examples, Tools & Fixes","permalink":"/docs/Security/cloud-security-essentials"}}');var i=s(4848),a=s(8453);const t={},o="\ud83d\udee0\ufe0f Cloud-Based Wazuh Monitoring Using Terraform and AWS",c={},l=[{value:"<code>main.tf</code>",id:"maintf",level:2},{value:"<code>provider.tf</code>",id:"providertf",level:2},{value:"<code>windows.tf</code>",id:"windowstf",level:2},{value:"<code>wazuh_server.tf</code>",id:"wazuh_servertf",level:2},{value:"<code>security-groups.tf</code>",id:"security-groupstf",level:2},{value:"<code>variables.tf</code>",id:"variablestf",level:2},{value:"<code>outputs.tf</code>",id:"outputstf",level:2},{value:"\u2705 To-Do &amp; Expansion Plan",id:"-to-do--expansion-plan",level:2}];function d(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"\ufe0f-cloud-based-wazuh-monitoring-using-terraform-and-aws",children:"\ud83d\udee0\ufe0f Cloud-Based Wazuh Monitoring Using Terraform and AWS"})}),"\n",(0,i.jsxs)(n.p,{children:["This project was created to launch a ",(0,i.jsx)(n.strong,{children:"Wazuh lab using the AWS sandbox"}),".\nThe goal was to host ",(0,i.jsx)(n.strong,{children:"Wazuh on an Ubuntu instance"})," and ",(0,i.jsx)(n.strong,{children:"scan a Windows Server 2019 instance"}),".\nTerraform was used to automate the deployment, allowing future reuse and learning."]}),"\n",(0,i.jsx)(n.p,{children:"You\u2019ll find the full sanitized code below, with clear explanations for each section."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"maintf",children:(0,i.jsx)(n.code,{children:"main.tf"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Sets up the VPC, subnet, internet gateway, and routing for the environment."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'resource "aws_vpc" "main" {\n  cidr_block = "<your-cidr-block>"\n}\n\nresource "aws_subnet" "public_subnet" {\n  vpc_id                  = aws_vpc.main.id\n  cidr_block              = "<your-cidr-block>"\n  map_public_ip_on_launch = true\n}\n\nresource "aws_internet_gateway" "igw" {\n  vpc_id = aws_vpc.main.id\n}\n\nresource "aws_route_table" "public_rt" {\n  vpc_id = aws_vpc.main.id\n\n  route {\n    cidr_block = "0.0.0.0/0"\n    gateway_id = aws_internet_gateway.igw.id\n  }\n}\n\nresource "aws_route_table_association" "public_rt_assoc" {\n  subnet_id      = aws_subnet.public_subnet.id\n  route_table_id = aws_route_table.public_rt.id\n}\n\nresource "aws_key_pair" "wazuh_lab_final_key" {\n  key_name   = "<your-key-name>"\n  public_key = file("~/.ssh/wazuh-lab-final-key.pub")\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"providertf",children:(0,i.jsx)(n.code,{children:"provider.tf"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Defines the AWS provider and region. Required by Terraform to know where and how to deploy."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'terraform {\n  required_providers {\n    aws = {\n      source  = "hashicorp/aws"\n      version = "~> 5.0"\n    }\n  }\n  required_version = ">= 1.3.0"\n}\n\nprovider "aws" {\n  region = var.aws_region\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"windowstf",children:(0,i.jsx)(n.code,{children:"windows.tf"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Launches a Windows Server 2019 EC2 instance.\nThe plan was to later install the Wazuh agent here to simulate a real monitored endpoint."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'resource "aws_instance" "windows_ec2" {\n  ami                    = "<your-ami-id>"\n  instance_type          = "t3.micro"\n  subnet_id              = aws_subnet.public_subnet.id\n  vpc_security_group_ids = [aws_security_group.wazuh_sg.id]\n  key_name               = "<your-key-name>"\n  get_password_data      = true\n\n  tags = {\n    Name = "windows-server"\n  }\n\n  provisioner "local-exec" {\n    command = "echo Windows instance deployed. RDP in after decrypting password in AWS Console."\n  }\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"wazuh_servertf",children:(0,i.jsx)(n.code,{children:"wazuh_server.tf"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Provisions the Ubuntu instance intended to host Wazuh.\nYou can automate Wazuh installation via user data or cloud-init."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'resource "aws_instance" "wazuh_server" {\n  ami                         = "<your-ami-id>"\n  instance_type               = "t2.medium"\n  subnet_id                   = aws_subnet.public_subnet.id\n  vpc_security_group_ids      = [aws_security_group.wazuh_sg.id]\n  associate_public_ip_address = true\n  key_name                    = "<your-key-name>"\n\n  user_data = file("scripts/wazuh_user_data.sh")\n\n  tags = {\n    Name = "wazuh-server"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"security-groupstf",children:(0,i.jsx)(n.code,{children:"security-groups.tf"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Creates a security group allowing access to:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"SSH for Ubuntu"}),"\n",(0,i.jsx)(n.li,{children:"RDP for Windows"}),"\n",(0,i.jsx)(n.li,{children:"Port 5601 for Wazuh Dashboard (Kibana)"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'resource "aws_security_group" "wazuh_sg" {\n  name        = "wazuh_sg"\n  description = "Allow SSH, RDP, Wazuh ports"\n  vpc_id      = aws_vpc.main.id\n\n  ingress {\n    from_port   = 22\n    to_port     = 22\n    protocol    = "tcp"\n    cidr_blocks = ["0.0.0.0/0"]\n  }\n\n  ingress {\n    from_port   = 3389\n    to_port     = 3389\n    protocol    = "tcp"\n    cidr_blocks = ["0.0.0.0/0"]\n  }\n\n  ingress {\n    from_port   = 5601\n    to_port     = 5601\n    protocol    = "tcp"\n    cidr_blocks = ["0.0.0.0/0"]\n  }\n\n  egress {\n    from_port   = 0\n    to_port     = 0\n    protocol    = "-1"\n    cidr_blocks = ["0.0.0.0/0"]\n  }\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"variablestf",children:(0,i.jsx)(n.code,{children:"variables.tf"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Stores configurable input values like region and key name for easier reusability."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'variable "aws_region" {\n  description = "AWS region to deploy into"\n  type        = string\n  default     = "us-east-1"\n}\n\nvariable "key_name" {\n  description = "Name of the SSH key pair"\n  type        = string\n}\n\nvariable "public_key_path" {\n  description = "Path to your public key file"\n  type        = string\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"outputstf",children:(0,i.jsx)(n.code,{children:"outputs.tf"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Terraform prints these outputs after deployment so you can easily connect to your EC2 instances."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'output "wazuh_server_public_ip" {\n  value = aws_instance.wazuh_server.public_ip\n}\n\noutput "windows_instance_public_ip" {\n  value = aws_instance.windows_ec2.public_ip\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-to-do--expansion-plan",children:"\u2705 To-Do & Expansion Plan"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Add a ",(0,i.jsx)(n.code,{children:"terraform.tfvars"})," file with actual input values"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Create and share a script for Wazuh agent setup on Windows"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Add screenshots for AWS console, Wazuh dashboard, and EC2 setup"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Document commands used in Wazuh install and troubleshooting"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Explore log forwarding and event triggers inside Wazuh"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var r=s(6540);const i={},a=r.createContext(i);function t(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);
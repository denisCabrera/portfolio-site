"use strict";(self.webpackChunkmy_portfolio=self.webpackChunkmy_portfolio||[]).push([[773],{6764:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"Cloud/terraform-s3-iam-policy-project","title":"\ud83d\udce6 Terraform S3 Bucket + IAM User Policy Automation","description":"This project demonstrates how to use Terraform to securely automate the creation of an AWS S3 bucket and a custom IAM user with scoped access.","source":"@site/docs/Cloud/terraform-s3-iam-policy-project.md","sourceDirName":"Cloud","slug":"/Cloud/terraform-s3-iam-policy-project","permalink":"/docs/Cloud/terraform-s3-iam-policy-project","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Cloud/terraform-s3-iam-policy-project.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Cloud","permalink":"/docs/category/cloud"}}');var c=s(4848),t=s(8453);const i={},o="\ud83d\udce6 Terraform S3 Bucket + IAM User Policy Automation",a={},l=[{value:"\ud83d\udd27 What This Project Does",id:"-what-this-project-does",level:2},{value:"\u2705 Real-World Use Case",id:"-real-world-use-case",level:2},{value:"\ud83d\udcc1 Project Structure",id:"-project-structure",level:2},{value:"\ud83d\udd10 Security Practices Followed",id:"-security-practices-followed",level:2},{value:"\ud83d\udd20 Input Variables (<code>variables.tf</code>)",id:"-input-variables-variablestf",level:2},{value:"\u2699\ufe0f AWS Provider (<code>provider.tf</code>)",id:"\ufe0f-aws-provider-providertf",level:2},{value:"\ud83d\udcdc Policy Template (<code>policies/s3-access-policy.tpl.json</code>)",id:"-policy-template-policiess3-access-policytpljson",level:2},{value:"\ud83d\ude80 Main Configuration (<code>main.tf</code>)",id:"-main-configuration-maintf",level:2},{value:"\ud83d\udce4 Outputs (<code>outputs.tf</code>)",id:"-outputs-outputstf",level:2},{value:"\ud83e\uddea Sample Inputs (<code>terraform.tfvars.example</code>)",id:"-sample-inputs-terraformtfvarsexample",level:2},{value:"\ud83d\udd04 Terraform Workflow Commands",id:"-terraform-workflow-commands",level:2},{value:"\ud83e\udde0 Challenges &amp; Improvements",id:"-challenges--improvements",level:2},{value:"\ud83d\udcda Further Reading",id:"-further-reading",level:2}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(r.header,{children:(0,c.jsx)(r.h1,{id:"-terraform-s3-bucket--iam-user-policy-automation",children:"\ud83d\udce6 Terraform S3 Bucket + IAM User Policy Automation"})}),"\n",(0,c.jsx)(r.p,{children:"This project demonstrates how to use Terraform to securely automate the creation of an AWS S3 bucket and a custom IAM user with scoped access."}),"\n",(0,c.jsx)(r.hr,{}),"\n",(0,c.jsx)(r.h2,{id:"-what-this-project-does",children:"\ud83d\udd27 What This Project Does"}),"\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsxs)(r.li,{children:["Creates an ",(0,c.jsx)(r.strong,{children:"S3 bucket"})," with public access blocked and ownership enforced"]}),"\n",(0,c.jsxs)(r.li,{children:["Creates an ",(0,c.jsx)(r.strong,{children:"IAM user"})]}),"\n",(0,c.jsxs)(r.li,{children:["Defines an IAM ",(0,c.jsx)(r.strong,{children:"policy template"})," in a separate ",(0,c.jsx)(r.code,{children:".tpl.json"})," file with dynamic bucket name injection"]}),"\n",(0,c.jsx)(r.li,{children:"Attaches the custom policy to the IAM user"}),"\n"]}),"\n",(0,c.jsx)(r.hr,{}),"\n",(0,c.jsx)(r.h2,{id:"-real-world-use-case",children:"\u2705 Real-World Use Case"}),"\n",(0,c.jsx)(r.p,{children:"This setup mirrors real-world scenarios where scoped S3 access is required. It's especially useful for:"}),"\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsx)(r.li,{children:"Backup scripts or Lambda functions writing to a bucket"}),"\n",(0,c.jsx)(r.li,{children:"Granting temporary access to a developer or third-party service"}),"\n",(0,c.jsx)(r.li,{children:"Creating a limited-access CI/CD pipeline role"}),"\n"]}),"\n",(0,c.jsx)(r.p,{children:"By using Terraform and dynamic policy templates, this project allows teams to securely and consistently provision access in a repeatable way."}),"\n",(0,c.jsx)(r.hr,{}),"\n",(0,c.jsx)(r.h2,{id:"-project-structure",children:"\ud83d\udcc1 Project Structure"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{children:"s3-user-policy/\n\u251c\u2500\u2500 main.tf\n\u251c\u2500\u2500 provider.tf\n\u251c\u2500\u2500 variables.tf\n\u251c\u2500\u2500 outputs.tf\n\u251c\u2500\u2500 terraform.tfvars.example\n\u2514\u2500\u2500 policies/\n    \u2514\u2500\u2500 s3-access-policy.tpl.json\n"})}),"\n",(0,c.jsx)(r.hr,{}),"\n",(0,c.jsx)(r.h2,{id:"-security-practices-followed",children:"\ud83d\udd10 Security Practices Followed"}),"\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsx)(r.li,{children:"No hardcoded names or secrets"}),"\n",(0,c.jsxs)(r.li,{children:[(0,c.jsx)(r.code,{children:"terraform.tfvars"})," excluded from version control"]}),"\n",(0,c.jsxs)(r.li,{children:[(0,c.jsx)(r.code,{children:".gitignore"})," used to avoid committing state files and sensitive data"]}),"\n",(0,c.jsx)(r.li,{children:"IAM policies are templated and dynamically filled at deploy time"}),"\n",(0,c.jsx)(r.li,{children:"S3 bucket blocks public access and enforces owner control"}),"\n"]}),"\n",(0,c.jsx)(r.hr,{}),"\n",(0,c.jsxs)(r.h2,{id:"-input-variables-variablestf",children:["\ud83d\udd20 Input Variables (",(0,c.jsx)(r.code,{children:"variables.tf"}),")"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-hcl",children:'variable "region" {\n  description = "AWS region to deploy resources"\n  type        = string\n  default     = "us-west-2"\n}\n\nvariable "bucket_name" {\n  description = "Globally unique S3 bucket name"\n  type        = string\n}\n\nvariable "iam_user_name" {\n  description = "IAM user who will access the bucket"\n  type        = string\n  default     = "placeholder-user"\n}\n'})}),"\n",(0,c.jsx)(r.hr,{}),"\n",(0,c.jsxs)(r.h2,{id:"\ufe0f-aws-provider-providertf",children:["\u2699\ufe0f AWS Provider (",(0,c.jsx)(r.code,{children:"provider.tf"}),")"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-hcl",children:'provider "aws" {\n  region = var.region\n}\n'})}),"\n",(0,c.jsx)(r.hr,{}),"\n",(0,c.jsxs)(r.h2,{id:"-policy-template-policiess3-access-policytpljson",children:["\ud83d\udcdc Policy Template (",(0,c.jsx)(r.code,{children:"policies/s3-access-policy.tpl.json"}),")"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-json",children:'{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Effect": "Allow",\n      "Action": [\n        "s3:ListBucket",\n        "s3:GetObject",\n        "s3:PutObject"\n      ],\n      "Resource": [\n        "arn:aws:s3:::${bucket}",\n        "arn:aws:s3:::${bucket}/*"\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,c.jsx)(r.hr,{}),"\n",(0,c.jsxs)(r.h2,{id:"-main-configuration-maintf",children:["\ud83d\ude80 Main Configuration (",(0,c.jsx)(r.code,{children:"main.tf"}),")"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-hcl",children:'data "template_file" "s3_policy" {\n  template = file("${path.module}/policies/s3-access-policy.tpl.json")\n  vars = {\n    bucket = var.bucket_name\n  }\n}\n\nresource "aws_s3_bucket" "my_bucket" {\n  bucket        = var.bucket_name\n  force_destroy = true\n}\n\nresource "aws_s3_bucket_ownership_controls" "bucket_ownership" {\n  bucket = aws_s3_bucket.my_bucket.id\n\n  rule {\n    object_ownership = "BucketOwnerEnforced"\n  }\n}\n\nresource "aws_s3_bucket_public_access_block" "public_access" {\n  bucket = aws_s3_bucket.my_bucket.id\n\n  block_public_acls       = true\n  ignore_public_acls      = true\n  block_public_policy     = true\n  restrict_public_buckets = true\n}\n\nresource "aws_iam_user" "s3_user" {\n  name = var.iam_user_name\n}\n\nresource "aws_iam_policy" "s3_access_policy" {\n  name        = "s3-access-policy"\n  description = "Allow user to access the S3 bucket"\n  policy      = data.template_file.s3_policy.rendered\n}\n\nresource "aws_iam_user_policy_attachment" "attach_policy" {\n  user       = aws_iam_user.s3_user.name\n  policy_arn = aws_iam_policy.s3_access_policy.arn\n}\n'})}),"\n",(0,c.jsx)(r.hr,{}),"\n",(0,c.jsxs)(r.h2,{id:"-outputs-outputstf",children:["\ud83d\udce4 Outputs (",(0,c.jsx)(r.code,{children:"outputs.tf"}),")"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-hcl",children:'output "bucket_name" {\n  description = "The name of the S3 bucket"\n  value       = aws_s3_bucket.my_bucket.bucket\n}\n\noutput "iam_user_name" {\n  description = "The IAM user\'s name"\n  value       = aws_iam_user.s3_user.name\n}\n'})}),"\n",(0,c.jsx)(r.hr,{}),"\n",(0,c.jsxs)(r.h2,{id:"-sample-inputs-terraformtfvarsexample",children:["\ud83e\uddea Sample Inputs (",(0,c.jsx)(r.code,{children:"terraform.tfvars.example"}),")"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-hcl",children:'bucket_name   = "placeholder-bucket-name"\nregion        = "us-west-2"\niam_user_name = "placeholder-user"\n'})}),"\n",(0,c.jsx)(r.hr,{}),"\n",(0,c.jsx)(r.h2,{id:"-terraform-workflow-commands",children:"\ud83d\udd04 Terraform Workflow Commands"}),"\n",(0,c.jsx)(r.p,{children:"These are the commands used to manage the lifecycle of the project:"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"terraform init       # Initialize Terraform working directory\nterraform plan       # Preview the resources to be created/modified\nterraform apply      # Deploy infrastructure\nterraform destroy    # Tear down all resources created\n"})}),"\n",(0,c.jsx)(r.hr,{}),"\n",(0,c.jsx)(r.h2,{id:"-challenges--improvements",children:"\ud83e\udde0 Challenges & Improvements"}),"\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsxs)(r.li,{children:["Learned how to use ",(0,c.jsx)(r.code,{children:"template_file"})," to inject Terraform variables into JSON IAM policies"]}),"\n",(0,c.jsx)(r.li,{children:"Cleanly separated IAM policy logic from Terraform code"}),"\n",(0,c.jsxs)(r.li,{children:["Handled S3 security requirements using ",(0,c.jsx)(r.code,{children:"aws_s3_bucket_public_access_block"})," and ",(0,c.jsx)(r.code,{children:"ownership_controls"})]}),"\n",(0,c.jsx)(r.li,{children:"In future iterations, this could be turned into a module and expanded for group/user-role access models"}),"\n"]}),"\n",(0,c.jsx)(r.hr,{}),"\n",(0,c.jsx)(r.h2,{id:"-further-reading",children:"\ud83d\udcda Further Reading"}),"\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsx)(r.li,{children:(0,c.jsx)(r.a,{href:"https://registry.terraform.io/providers/hashicorp/aws/latest/docs",children:"Terraform AWS Provider Docs"})}),"\n",(0,c.jsx)(r.li,{children:(0,c.jsx)(r.a,{href:"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html",children:"AWS IAM Policy Reference"})}),"\n",(0,c.jsx)(r.li,{children:(0,c.jsx)(r.a,{href:"https://docs.aws.amazon.com/AmazonS3/latest/userguide/security-best-practices.html",children:"S3 Bucket Security Best Practices"})}),"\n"]}),"\n",(0,c.jsx)(r.hr,{})]})}function u(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,c.jsx)(r,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>i,x:()=>o});var n=s(6540);const c={},t=n.createContext(c);function i(e){const r=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),n.createElement(t.Provider,{value:r},e.children)}}}]);